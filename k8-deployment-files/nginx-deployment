#!/bin/bash

source public-ip-addresses

echo "Create a deployment for nginx"
kubectl apply -f nginx-deployment.yaml

echo "Create a deployment for nginx-proxy's fixed port"
kubectl apply -f nginx-service.yaml

sleep 2
kubectl get pods -l app=nginx

echo "Expose the flask application deployment using a NodePort service(--port docker-container-port)"
kubectl expose deployment nginx-deployment --port 80 --port 443 --type NodePort

#echo "Retrieve the node port assigned to the nginx service"
#nginx_NODE_PORT=$(kubectl get svc nginx \
#  --output=jsonpath='{range .spec.ports[0]}{.nodePort}')

echo "Allow remote access to nginx node port"
SECURITY_GROUP_ID=$(aws ec2 describe-security-groups \
--filters "Name=tag:Name,Values=kubernetes-the-hard-way" \
--output text --query 'SecurityGroups[0].GroupId')

aws ec2 authorize-security-group-ingress \
  --group-id "${SECURITY_GROUP_ID}" \
  --protocol tcp \
  --port 80 \
  --cidr 0.0.0.0/0

aws ec2 authorize-security-group-ingress \
  --group-id "${SECURITY_GROUP_ID}" \
  --protocol tcp \
  --port 443 \
  --cidr 0.0.0.0/0

echo "Retrieve the external IP address of a worker instance"
EXTERNAL_IP=${PUBLIC_ADDRESS[worker-0]}
echo "${EXTERNAL_IP}"

echo "Make an HTTP request using the external IP address and the nginx node port"
curl -I http://"${EXTERNAL_IP}":80

echo "Make an HTTPS request using the external IP address and the nginx node port"
curl -I http://"${EXTERNAL_IP}":443
